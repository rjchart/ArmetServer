{
  "name": "azure-keyvault",
  "author": {
    "name": "Microsoft Corporation"
  },
  "contributors": [
    {
      "name": "Colombo, Fernando",
      "email": "fcolombo@microsoft.com"
    },
    {
      "name": "Gupta, Divya",
      "email": "Divya.Gupta@microsoft.com"
    },
    {
      "name": "Kostal, Greg",
      "email": "gkostal@microsoft.com"
    },
    {
      "name": "Wilson, Hervey",
      "email": "herveyw@microsoft.com"
    },
    {
      "name": "Zavery, Amar",
      "email": "amzavery@microsoft.com"
    },
    {
      "name": "Wang, Yugang",
      "email": "yugangw@microsoft.com"
    }
  ],
  "version": "0.9.2",
  "description": "Microsoft Azure Key Vault Client Library for node",
  "tags": [
    "azure",
    "sdk"
  ],
  "keywords": [
    "node",
    "azure"
  ],
  "main": "./lib/keyVault.js",
  "engines": {
    "node": ">= 0.6.15"
  },
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "dependencies": {
    "azure-common": "0.9.10",
    "node-uuid": ">= 1.3.3"
  },
  "homepage": "http://github.com/Azure/azure-sdk-for-node",
  "repository": {
    "type": "git",
    "url": "git@github.com:Azure/azure-sdk-for-node.git"
  },
  "bugs": {
    "url": "http://github.com/Azure/azure-sdk-for-node/issues"
  },
  "scripts": {
    "test": "npm -s run-script jshint"
  },
  "readme": "# Microsoft Azure SDK for Node.js - Key Vault\r\n\r\nThis project provides a Node.js package for accessing keys and secrets on Azure Key Vault. Right now it supports:\r\n- **Node.js version: 0.6.15 or higher**\r\n- **REST API version: 2015-02-01-preview**\r\n\r\n## Features\r\n\r\n- Manage keys: create, import, update, delete, backup, restore, list and get.\r\n- Key operations: sign, verify, encrypt, decrypt, wrap, unwrap.\r\n- Secret operations: set, get, update and list.\r\n\r\n## How to Install\r\n\r\n```bash\r\nnpm install azure-keyvault\r\n```\r\n\r\n## How to Use\r\n\r\nThe following example creates a key and uses it for encrypt and decrypt some data.\r\n\r\n```javascript\r\nvar AzureCommon   = require('azure-common');\r\nvar AzureKeyVault = require('azure-keyvault');\r\nvar AdalNode      = require('adal-node'); // Used for authentication\r\nvar Hoek          = require('hoek'); // Used for base64url encoding\r\n\r\n// Create an authentication context\r\nvar tenantId = '<the tenant GUID>';\r\nvar authorityUrl = 'https://login.windows.net/' + tenantId;\r\n\r\n// Acquire an access token for this client application\r\nvar context = new AdalNode.AuthenticationContext(authorityUrl);\r\nvar clientId = '<the client app id, as provided by the portal>';\r\nvar clientSecret = '<the client secret, as provided by the portal>';\r\n\r\ncontext.acquireTokenWithClientCredentials(AzureKeyVault.RESOURCE_ID, clientId, clientSecret, function(err, response) {\r\n  if (err) {\r\n    throw new Error('Unable to authenticate: ' + err.stack);\r\n  }\r\n  var credentials = new AzureCommon.TokenCloudCredentials({\r\n    subscriptionId : '<the subscription GUID>',\r\n    authorizationScheme : response.tokenType,\r\n    token : response.accessToken\r\n  });\r\n  \r\n  // Creates an Azure Key Vault client with the credentials.\r\n  var vaultUri = 'https://myvault.vault.azure.net'; // IMPORTANT: Replace 'myvault' with your vault's name.\r\n  var client = new AzureKeyVault.KeyVaultClient(credentials, vaultUri);\r\n  \r\n  // Creates a key\r\n  var request = {\r\n    kty: \"RSA\",\r\n    key_ops: [\"encrypt\", \"decrypt\"],\r\n    attributes: { enabled: true }\r\n  };\r\n\r\n  console.info('Creating key...');\r\n  client.keys.create(vaultUri, 'mykey', request, function(err, result) {\r\n    if (err) throw err;\r\n    \r\n    console.info('Key created: ' + JSON.stringify(result, null, ' '));\r\n    var kid = result.key.kid;\r\n\r\n    // Encrypts some data with the new key.\r\n    var secret = 'Chocolate is hidden in the toothpaste cabinet';\r\n    var request = {\r\n      alg: \"RSA-OAEP\",\r\n      value: Hoek.base64urlEncode(secret)\r\n    };\r\n\r\n    console.info('Encrypting text...');\r\n    client.keys.encryptData(kid, request, function(err, result) {\r\n      if (err) throw err;\r\n      \r\n      console.info('Encryption result: ' + JSON.stringify(result, null, ' '));\r\n      var cipherText = result.value;\r\n      \r\n      // Decrypts data with the same key.\r\n      var request = {\r\n        alg: \"RSA-OAEP\",\r\n        value: cipherText\r\n      };\r\n\r\n      client.keys.decryptData(kid, request, function(err, result) {\r\n        if (err) throw err;\r\n        \r\n        console.info('Data decrypted: ' + JSON.stringify(result, null, ' '));\r\n        var plainText = Hoek.base64urlDecode(result.value);\r\n        if (plainText == secret) {\r\n           console.info(\"Secrets match.\");\r\n        } else {\r\n          throw 'Was expecting \"' + secret + '\", not \"'+ plainText +'\".';\r\n        }\r\n      });\r\n        \r\n    });\r\n    \r\n  });\r\n\r\n});\r\n```\r\n\r\n## Related projects\r\n\r\n- [Microsoft Azure SDK for Node.js](https://github.com/WindowsAzure/azure-sdk-for-node)\r\n- [Microsoft Azure SDK for Node.js - Key Vault Management](https://github.com/WindowsAzure/azure-mgmt-keyvault-for-node)\r\n",
  "readmeFilename": "README.md",
  "_id": "azure-keyvault@0.9.2",
  "_from": "azure-keyvault@0.9.2"
}
